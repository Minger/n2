-# expects @title, @events
- cache_if page.present?, "events_list_#{page}html" do
  - events ||= Event.active.paginate :page => params[:page], :per_page => Event.per_page, :order => "start_time asc"
  - paginate ||= false
  .panel-2
    .panel-bar
      -# if events.present? and events.first.refineable?
        .refine-search-wrap
          = render :partial => 'shared/forms/refine_dropdown'
      %h2= t('.events_title')
    .item-list-wrap
      .item-list
        %ul
          - events.each do |event|
            %li
              // event item wrapper
              .item-complex-image
                // event description
                .thumb
                  - if event.images.present?
                    = image_tag event.images.first.url(:thumb)
                  -else
                    = image_tag ('skin/watermark.jpg')
                .content
                  %h4
                    -# %span.tag
                    -# could be used to show type of event e.g. Lecture, Party, etc.
                    = link_to event.name, event_path(event)
                  .meta-profile
                    .profile-pic= local_linked_profile_pic event.user, :size => :square
                    %h6= generic_posted_by event
                    %h6
                      %span== #{like_link event} #{event.votes_tally}
                      %span.pipe
                        |
                      %span== #{link_to t('.events_comments'), event_path(event, :anchor => "commentListTop")} #{event.comments_count}
                // item-details
                .details
                  .details-wrap
                    %p.title
                      == #{event.location}
                    %p
                      == #{event.start_time.to_s :short_day}
                    %p
                      == Start: #{event.start_time.to_s :short_time}
                    %p
                      - unless event.end_time.nil?
                        == End: #{event.end_time.to_s :short_time}

    - if paginate
      .panel-2
        = will_paginate events
