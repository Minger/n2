- limit_title = 100
- limit_caption = 250
- cache :auto_feature_mini_html, :expires_in => 15.minutes do
  - animation_speed = get_setting('animation_speed_features').try(:value) || 500
  - animation_interval = get_setting('animation_interval_general').try(:value) || 1000
  - auto_feature ||= Image.active.curator_items.find(:all, :conditions => "imageable_type = 'Content'", :limit => 6, :order => ["created_at desc"], :include => 'imageable').map(&:imageable).uniq
  - unless auto_feature.empty? 
    - if get_setting('auto_feature_only_moderator_items').try(:value)
      - auto_feature = auto_feature.delete_if{|imageable| imageable.user.is_admin == false and imageable.user.is_editor == false and imageable.user.is_moderator == false}
    %div{:class => "panel_1 featureWrap #{defined?(widget_page) ? widget_page.css_class : ''}"}
      = render :partial => 'shared/featured_items/panelbar'
      .feature_scrollable_panel_mini
        .feature_scrollable_items
          - auto_feature.each do |item|
            .panel_items
              .featured
                %div{:class => "item_1"}
                  .thumb
                    - if item.images.present?
                      = image_tag item.images.first.url(:thumb)
                    -else
                      = image_tag ('default/watermark.jpg')
                  .itemBlock
                    %h4
                      %span.ellipsis_title_3
                        = link_to item.item_title, path_to_self(item.item_link), {:class => 'ellipsis_text'}
                    %p.ellipsis_caption_4
                      %span.ellipsis_text
                        = caption(sanitize(strip_tags(item.featured_blurb)),limit_caption)
                    .itemMeta
                      .profilePic= local_linked_profile_pic item.user
                      %h3= t('posted_by', :fb_name => local_linked_profile_name(item.user), :date => timeago(item.created_at))
                      %span.btnComment== #{like_link item.item_link} #{item.votes_tally}
                      %span.btnComment== #{link_to t('comments'), polymorphic_url(item.item_link, :anchor => "commentListTop")} #{item.comments_count}
      :javascript
        $(function() {            
          $(".feature_scrollable_panel_mini").scrollable({speed : #{animation_speed}, circular: true, mousewheel: false}).autoscroll({ interval : #{animation_interval}, autoplay: true});
        });