- content_for :head do
  :javascript
    $(function() {
    var viewObjectTemplateLimits = #{view_object_template_limit_json};
    console.log(viewObjectTemplateLimits);
    });

#content
  #admin-actions
    -# link_to 'Return to View Objects index', admin_view_objects_path, :class=>"admin-btn"
    -#%button#save-button.admin-btn.float-right{:type => "button"} Update Template Settings

  %h2 Update View Object
  = form_tag(admin_view_objects_path, :class => "formtastic") do
    = field_set_tag nil, :class => 'inputs' do
      %ol
        %li.input.string
          = label_tag 'view_object[key_name]', 'View Object Name', :class => "label"
          = text_field_tag 'view_object[key_name]', @view_object.name
        %li.input.string
          = label_tag 'view_object_setting[locale_title]', 'Locale Title', :class => "label"
          = text_field_tag 'view_object_setting[locale_title]', @view_object_setting.locale_title
        %li.input.string
          = label_tag 'view_object_setting[locale_subtitle]', 'Locale Subtitle', :class => "label"
          = text_field_tag 'view_object_setting[locale_subtitle]', @view_object_setting.locale_subtitle
        %li.input.string
          = label_tag 'view_object[view_object_template_id]', 'View Object Template', :class => "label"
          = select_tag 'view_object[view_object_template_id]', options_for_select(select_view_object_template_options, @view_object.view_object_template_id)
        %li.input.string
          = label_tag 'view_object_setting[klass_name]', 'Model Resource', :class => "label"
          = select_tag 'view_object_setting[klass_name]', options_for_select(@view_object_setting.class.view_object_classes.map {|c| [c.name.titleize, c.name] }, @view_object_setting.klass_name)
        - kommand = @view_object_setting.kommands.first
        - klass = @view_object_setting.get_klass
        %li.input.string
          = label_tag 'view_object_setting[kommand_name]', 'Method', :class => "label"
          -#= select_tag 'view_object_setting[kommand_name]', options_for_select(klass.view_object_scope_methods, kommand[:method_name])
        %li.input.string
          = label_tag 'view_object_setting[kommand_limit]', 'Number of Items', :class => "label"
          -#= select_tag 'view_object_setting[kommand_limit]', options_for_select(limit_options, kommand[:args].try(:first))
        %li.input.boolean
          = label_tag 'view_object_setting[use_post_button]', nil, :class => "label" do
            = check_box_tag 'view_object_setting[use_post_button]', 1, @view_object_setting.use_post_button
            Use Post Button
        %li.input.boolean
          = label_tag 'view_object_setting[cache_disabled]', 'Disable Caching', :class => "label" do
            = check_box_tag 'view_object_setting[cache_disabled]', 1, @view_object_setting.cache_disabled
            Disable Caching

    = field_set_tag nil, :class => 'buttons' do
      %ol
        %li
          = submit_tag "Create View Object"
